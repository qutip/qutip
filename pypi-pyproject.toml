# This a copy of pyprojects.toml for use when building wheels for PyPI
# with cibuildwheel.
#
# The problem: We need to build with specific versions of numpy on each
# version of Python and each platform so that our built wheels work with
# any version of numpy supported by that platform and later than our own
# numpy version requirement. At the same time, we don't want to fix the
# version of numpy in the main pyproject.toml file because that prevent
# users installing QuTiP with the latest numpy.
#
# See cibuildwheel issue: https://github.com/pypa/cibuildwheel/issues/955
#
# The numpy requirements are taken from
# https://github.com/scipy/oldest-supported-numpy/blob/master/setup.cfg
# and then:
#
# * updated to at least numpy>=1.16.6 (QuTiP's own minimum numpy version)
# * requirements for Python < 3.6 are removed (QuTiP's minimum Python version)
[build-system]
requires = [
    "setuptools",
    "packaging",
    "wheel",
    "cython>=0.29.20",
    "scipy>=1.0",
    # numpy requirements:
    # NOTE: platform_system 'AIX' and platform_machine 'aarch64' are mutually
    #       exclusive so they are specified by themself when setting their
    #       numpy version.

    # AIX requires fixes contained in numpy 1.16
    "numpy==1.16.6; python_version=='3.6' and platform_system=='AIX'",
    "numpy==1.16.6; python_version=='3.7' and platform_system=='AIX'",

    # numpy 1.19 was the first minor release to provide aarch64 wheels, but
    # wheels require fixes contained in numpy 1.19.2 (For Python 3.5: support
    # was dropped in 1.19 so numpy 1.18.5 can be built from source instead).
    "numpy==1.19.2; python_version=='3.6' and platform_machine=='aarch64'",
    "numpy==1.19.2; python_version=='3.7' and platform_machine=='aarch64'",
    "numpy==1.19.2; python_version=='3.8' and platform_machine=='aarch64'",

    # arm64 on Darwin supports Python 3.8 and above requires numpy>=1.21.0
    # (first version with universal2 wheels available)
    "numpy==1.21.0; python_version=='3.8' and platform_machine=='arm64' and platform_system=='Darwin'",
    "numpy==1.21.0; python_version=='3.9' and platform_machine=='arm64' and platform_system=='Darwin'",

    # Python 3.8 on s390x requires at least 1.17.5, see gh-29
    "numpy==1.17.5; python_version=='3.8' and platform_machine=='s390x' and platform_python_implementation != 'PyPy'",

    # default numpy requirements
    "numpy==1.16.6; python_version=='3.6' and platform_machine!='aarch64' and platform_system!='AIX' and platform_python_implementation != 'PyPy'",
    "numpy==1.16.6; python_version=='3.7' and platform_machine!='aarch64' and platform_system!='AIX' and platform_python_implementation != 'PyPy'",
    "numpy==1.16.6; python_version=='3.8' and (platform_machine!='arm64' or platform_system!='Darwin') and platform_machine!='aarch64' and platform_python_implementation != 'PyPy'",
    "numpy==1.19.3; python_version=='3.9' and (platform_machine!='arm64' or platform_system!='Darwin') and platform_python_implementation != 'PyPy'",
    # Note that 1.21.3 was the first version with a complete set of 3.10 wheels,
    # however macOS was broken and it's safe to build against 1.21.4 on all platforms (see gh-28)
    "numpy==1.21.4; python_version=='3.10' and platform_python_implementation != 'PyPy'",

    "numpy==1.19.0; python_version=='3.6' and platform_python_implementation=='PyPy'",
    "numpy==1.20.0; python_version=='3.7' and platform_python_implementation=='PyPy'",

    # For Python versions which aren't yet officially supported,
    # we specify an unpinned Numpy which allows source distributions
    # to be used and allows wheels to be used as soon as they
    # become available.
    "numpy; python_version>='3.11'",
    "numpy; python_version>='3.8' and platform_python_implementation=='PyPy'",
]
build-backend = "setuptools.build_meta"
